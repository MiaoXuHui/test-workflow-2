# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
pr: none

variables:
  COMMIT_ID: e1e81264dc1d6362c9c3ee3b7752ad9e035c4a09
  ENDPOINT: build

name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)



parameters:
- name: "platforms"
  type: object
  default:
  - vs
  - broadcom

resources:
  template: resources-template.yml

stages:
- stage: Build
  pool:
    vmImage: 'ubuntu-18.04'
  jobs:
  - job: Test1
    displayName: Test1
    steps:
    - checkout: test-pipelines
      displayName: "Checkout test-pipelines"
    - script: |
        sudo ./build_and_install_module.sh
      displayName: "Install dependencies"
    - script: |
        sudo dmesg
      condition: always()
      displayName: "dmesg"
    - script: |
        set -x
        sudo docker load -i ../docker-sonic-vs.gz
        docker ps
        ip netns list
        uname -a
        sudo /sbin/ip link add Vrf1 type vrf table 1001 || { echo 'vrf command failed' ; exit 1; }
        sudo /sbin/ip link del Vrf1 type vrf table 1001
      displayName: "Test"
  
